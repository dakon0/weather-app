{"version":3,"sources":["index.js"],"names":["key","tempPara","document","querySelector","unitsCheck","humidityPara","windPara","weatherDescPara","city","input","datePara","temp","date","getWeatherByCity","location","fetch","then","resp","json","data","console","log","checked","main","toFixed","textContent","name","humidity","wind","speed","weather","description","Date","slice","catch","error","getWeatherBylatlon","latitude","longitude","getLocalWeather","status","success","position","coords","navigator","geolocation","getCurrentPosition","kelvins2Ferenheits","tempInKelvins","kelvins2Celsius","ferenheit2Celsius","tempInFerenheit","celsius2Ferenheit","tempInCelsius","addEventListener","event","preventDefault","value"],"mappings":"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","file":"docs.e31bb0bc.js","sourceRoot":"..\\docs","sourcesContent":["const key = '4fa592d94426516b6e4d2bdb8f30b2dd'; //openweathermap API key\r\nconst tempPara = document.querySelector('.temp');\r\nconst unitsCheck = document.querySelector('.unitsCheck');\r\nconst humidityPara = document.querySelector('.humidity');\r\nconst windPara = document.querySelector('.wind');\r\nconst weatherDescPara = document.querySelector('.weather-description');\r\nconst city = document.querySelector('.location');\r\n// const tempUnits = document.querySelector('.tempUnits');\r\nconst input = document.querySelector('.input-location-name');\r\nconst datePara = document.querySelector('.date');\r\n\r\nlet temp;\r\nlet date;\r\n\r\nfunction getWeatherByCity(location) {\r\n  fetch(\r\n    'https://api.openweathermap.org/data/2.5/weather?q=' +\r\n      location +\r\n      '&appid=' +\r\n      key\r\n  )\r\n    .then(function (resp) {\r\n      return resp.json(); //converting data to json\r\n    })\r\n    .then(function (data) {\r\n      console.log(data);\r\n      if (!unitsCheck.checked) {\r\n        temp = (data.main.temp - 273.15).toFixed(2);\r\n        // tempUnits.textContent = '°C';\r\n      } else if (unitsCheck.checked) {\r\n        temp = (((data.main.temp - 273.15) * 9) / 5 + 32).toFixed(2);\r\n      }\r\n\r\n      tempPara.textContent = temp;\r\n      city.textContent = data.name;\r\n      humidityPara.textContent = `${data.main.humidity}%`;\r\n      windPara.textContent = `${data.wind.speed} m/s`;\r\n      weatherDescPara.textContent = data.weather[0].description;\r\n\r\n      date = `${Date().slice(0, 3)},\r\n        ${Date().slice(8, 11)}\r\n        ${Date().slice(4, 8)}\r\n        ${Date().slice(11, 16)}`;\r\n      datePara.textContent = date;\r\n    })\r\n    .catch(function (error) {\r\n      console.log('Caught an error: ', error);\r\n    });\r\n}\r\n\r\nfunction getWeatherBylatlon(latitude, longitude) {\r\n  fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${key}`\r\n  )\r\n    .then(function (resp) {\r\n      return resp.json(); //converting data to json\r\n    })\r\n    .then(function (data) {\r\n      if (!unitsCheck.checked) {\r\n        temp = (data.main.temp - 273.15).toFixed(2);\r\n        // tempUnits.textContent = '°C';\r\n      } else if (unitsCheck.checked) {\r\n        temp = (((data.main.temp - 273.15) * 9) / 5 + 32).toFixed(2);\r\n        // tempUnits.textContent = '°F';\r\n      }\r\n\r\n      tempPara.textContent = temp;\r\n      city.textContent = data.name;\r\n      humidityPara.textContent = `${data.main.humidity}%`;\r\n      windPara.textContent = `${data.wind.speed} m/s`;\r\n      weatherDescPara.textContent = data.weather[0].description;\r\n    })\r\n    .catch(function (error) {\r\n      console.log('Caught an error: ', error);\r\n    });\r\n}\r\n\r\nfunction getLocalWeather() {\r\n  const status = document.querySelector('#status');\r\n\r\n  function success(position) {\r\n    const latitude = position.coords.latitude;\r\n    const longitude = position.coords.longitude;\r\n    getWeatherBylatlon(latitude, longitude);\r\n  }\r\n\r\n  function error() {\r\n    status.textContent = 'Unable to retrieve your location';\r\n  }\r\n\r\n  if (!navigator.geolocation) {\r\n    status.textContent = 'Geolocation is not supported by your browser';\r\n  } else {\r\n    navigator.geolocation.getCurrentPosition(success, error);\r\n  }\r\n}\r\n\r\nfunction kelvins2Ferenheits(tempInKelvins) {\r\n  return (tempInKelvins - 273.15).toFixed(2);\r\n}\r\n\r\nfunction kelvins2Celsius(tempInKelvins) {\r\n  return (((tempInKelvins - 273.15) * 9) / 5 + 32).toFixed(2);\r\n}\r\n\r\nfunction ferenheit2Celsius(tempInFerenheit) {\r\n  return (((tempInFerenheit - 32) * 5) / 9).toFixed(2);\r\n}\r\n\r\nfunction celsius2Ferenheit(tempInCelsius) {\r\n  return ((tempInCelsius * 9) / 5 + 32).toFixed(2);\r\n}\r\n\r\n// Main Code:\r\ndocument\r\n  .querySelector('#find-loc-weather')\r\n  .addEventListener('click', getLocalWeather);\r\nunitsCheck.addEventListener('change', () => {\r\n  if (!unitsCheck.checked) {\r\n    tempPara.textContent = temp = ferenheit2Celsius(temp);\r\n  } else if (unitsCheck.checked) {\r\n    tempPara.textContent = temp = celsius2Ferenheit(temp);\r\n  }\r\n});\r\n\r\ninput.addEventListener('keypress', (event) => {\r\n  if (event.key === 'Enter') {\r\n    event.preventDefault();\r\n    getWeatherByCity(input.value);\r\n    input.value = '';\r\n  }\r\n  console.log(event);\r\n});\r\n\r\ngetWeatherByCity('London');\r\n"]}