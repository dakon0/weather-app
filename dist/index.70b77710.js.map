{"mappings":"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","sources":["docs/index.js"],"sourcesContent":["const key = \"4fa592d94426516b6e4d2bdb8f30b2dd\"; //openweathermap API key\r\nconst tempPara = document.querySelector(\".temp\");\r\nconst unitsCheck = document.querySelector(\".unitsCheck\");\r\nconst humidityPara = document.querySelector(\".humidity\");\r\nconst windPara = document.querySelector(\".wind\");\r\nconst weatherDescPara = document.querySelector(\".weather-description\");\r\nconst city = document.querySelector(\".location\");\r\n// const tempUnits = document.querySelector('.tempUnits');\r\nconst input = document.querySelector(\".input-location-name\");\r\nconst datePara = document.querySelector(\".date\");\r\n\r\nlet temp;\r\nlet date;\r\n\r\nfunction getWeatherByCity(location) {\r\n  fetch(\r\n    \"https://api.openweathermap.org/data/2.5/weather?q=\" +\r\n      location +\r\n      \"&appid=\" +\r\n      key\r\n  )\r\n    .then(function (resp) {\r\n      return resp.json(); //converting data to json\r\n    })\r\n    .then(function (data) {\r\n      console.log(data);\r\n      if (!unitsCheck.checked) {\r\n        temp = (data.main.temp - 273.15).toFixed(2);\r\n        // tempUnits.textContent = '°C';\r\n      } else if (unitsCheck.checked) {\r\n        temp = (((data.main.temp - 273.15) * 9) / 5 + 32).toFixed(2);\r\n        // tempUnits.textContent = '°F';\r\n      }\r\n\r\n      tempPara.textContent = temp;\r\n      city.textContent = data.name;\r\n      humidityPara.textContent = `${data.main.humidity}%`;\r\n      windPara.textContent = `${data.wind.speed} m/s`;\r\n      weatherDescPara.textContent = data.weather[0].description;\r\n\r\n      date = `${Date().slice(0, 3)}, ${Date().slice(9, 11)}${Date().slice(\r\n        4,\r\n        8\r\n      )}${Date().slice(11, 16)}`;\r\n      datePara.textContent = date;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"Caught an error: \", error);\r\n    });\r\n}\r\n\r\nfunction getWeatherBylatlon(latitude, longitude) {\r\n  fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${key}`\r\n  )\r\n    .then(function (resp) {\r\n      return resp.json(); //converting data to json\r\n    })\r\n    .then(function (data) {\r\n      if (!unitsCheck.checked) {\r\n        temp = (data.main.temp - 273.15).toFixed(2);\r\n        // tempUnits.textContent = '°C';\r\n      } else if (unitsCheck.checked) {\r\n        temp = (((data.main.temp - 273.15) * 9) / 5 + 32).toFixed(2);\r\n        // tempUnits.textContent = '°F';\r\n      }\r\n\r\n      tempPara.textContent = temp;\r\n      city.textContent = data.name;\r\n      humidityPara.textContent = `${data.main.humidity}%`;\r\n      windPara.textContent = `${data.wind.speed} m/s`;\r\n      weatherDescPara.textContent = data.weather[0].description;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"Caught an error: \", error);\r\n    });\r\n}\r\n\r\nfunction getLocalWeather() {\r\n  const status = document.querySelector(\"#status\");\r\n\r\n  function success(position) {\r\n    const latitude = position.coords.latitude;\r\n    const longitude = position.coords.longitude;\r\n    getWeatherBylatlon(latitude, longitude);\r\n  }\r\n\r\n  function error() {\r\n    status.textContent = \"Unable to retrieve your location\";\r\n  }\r\n\r\n  if (!navigator.geolocation) {\r\n    status.textContent = \"Geolocation is not supported by your browser\";\r\n  } else {\r\n    navigator.geolocation.getCurrentPosition(success, error);\r\n  }\r\n}\r\n\r\nfunction kelvins2Ferenheits(tempInKelvins) {\r\n  return (tempInKelvins - 273.15).toFixed(2);\r\n}\r\n\r\nfunction kelvins2Celsius(tempInKelvins) {\r\n  return (((tempInKelvins - 273.15) * 9) / 5 + 32).toFixed(2);\r\n}\r\n\r\nfunction ferenheit2Celsius(tempInFerenheit) {\r\n  return (((tempInFerenheit - 32) * 5) / 9).toFixed(2);\r\n}\r\n\r\nfunction celsius2Ferenheit(tempInCelsius) {\r\n  return ((tempInCelsius * 9) / 5 + 32).toFixed(2);\r\n}\r\n\r\n// Main Code:\r\ndocument\r\n  .querySelector(\"#find-loc-weather\")\r\n  .addEventListener(\"click\", getLocalWeather);\r\nunitsCheck.addEventListener(\"change\", () => {\r\n  if (!unitsCheck.checked) {\r\n    tempPara.textContent = temp = ferenheit2Celsius(temp);\r\n    // tempUnits.textContent = '°C';\r\n  } else if (unitsCheck.checked) {\r\n    tempPara.textContent = temp = celsius2Ferenheit(temp);\r\n    // tempUnits.textContent = '°F';\r\n  }\r\n});\r\n\r\ninput.addEventListener(\"keypress\", (event) => {\r\n  if (event.key === \"Enter\") {\r\n    event.preventDefault();\r\n    getWeatherByCity(input.value);\r\n    input.value = \"\";\r\n  }\r\n  console.log(event);\r\n});\r\n\r\ngetWeatherByCity(\"London\");\r\n"],"names":["key","tempPara","document","querySelector","unitsCheck","humidityPara","windPara","weatherDescPara","city","input","datePara","temp","date","getWeatherByCity","location","fetch","then","resp","json","data","console","log","checked","main","toFixed","textContent","name","humidity","wind","speed","weather","description","Date","slice","catch","error","getWeatherBylatlon","latitude","longitude","getLocalWeather","status","navigator","geolocation","getCurrentPosition","position","coords","kelvins2Ferenheits","tempInKelvins","kelvins2Celsius","ferenheit2Celsius","tempInFerenheit","celsius2Ferenheit","tempInCelsius","addEventListener","event","preventDefault","value"],"version":3,"file":"index.70b77710.js.map"}