{"version":3,"sources":["index.js"],"names":["temp","date","key","tempPara","document","querySelector","unitsCheck","humidityPara","windPara","weatherDescPara","city","input","datePara","getWeatherByCity","location","fetch","then","resp","json","data","console","log","checked","main","toFixed","textContent","name","humidity","wind","speed","weather","description","Date","slice","catch","error","getWeatherBylatlon","latitude","longitude","getLocalWeather","status","navigator","geolocation","getCurrentPosition","position","coords","kelvins2Ferenheits","tempInKelvins","kelvins2Celsius","ferenheit2Celsius","tempInFerenheit","celsius2Ferenheit","tempInCelsius","addEventListener","event","preventDefault","value"],"mappings":"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","file":"docs.00063013.js","sourceRoot":"..\\docs","sourcesContent":["const key = '4fa592d94426516b6e4d2bdb8f30b2dd'; //openweathermap API key\r\nconst tempPara = document.querySelector('.temp');\r\nconst unitsCheck = document.querySelector('.unitsCheck');\r\nconst humidityPara = document.querySelector('.humidity');\r\nconst windPara = document.querySelector('.wind');\r\nconst weatherDescPara = document.querySelector('.weather-description');\r\nconst city = document.querySelector('.location');\r\n// const tempUnits = document.querySelector('.tempUnits');\r\nconst input = document.querySelector('.input-location-name');\r\nconst datePara = document.querySelector('.date');\r\n\r\nlet temp;\r\nlet date;\r\n\r\nfunction getWeatherByCity(location) {\r\n  fetch(\r\n    'https://api.openweathermap.org/data/2.5/weather?q=' +\r\n      location +\r\n      '&appid=' +\r\n      key\r\n  )\r\n    .then(function (resp) {\r\n      return resp.json(); //converting data to json\r\n    })\r\n    .then(function (data) {\r\n      console.log(data);\r\n      if (!unitsCheck.checked) {\r\n        temp = (data.main.temp - 273.15).toFixed(2);\r\n        // tempUnits.textContent = '°C';\r\n      } else if (unitsCheck.checked) {\r\n        temp = (((data.main.temp - 273.15) * 9) / 5 + 32).toFixed(2);\r\n      }\r\n\r\n      tempPara.textContent = temp;\r\n      city.textContent = data.name;\r\n      humidityPara.textContent = `${data.main.humidity}%`;\r\n      windPara.textContent = `${data.wind.speed} m/s`;\r\n      weatherDescPara.textContent = data.weather[0].description;\r\n\r\n      date = `${Date().slice(0, 3)},\r\n        ${Date().slice(8, 11)}\r\n        ${Date().slice(4, 8)}\r\n        ${Date().slice(11, 16)}`;\r\n      datePara.textContent = date;\r\n    })\r\n    .catch(function (error) {\r\n      console.log('Caught an error: ', error);\r\n    });\r\n}\r\n\r\nfunction getWeatherBylatlon(latitude, longitude) {\r\n  fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${key}`\r\n  )\r\n    .then(function (resp) {\r\n      return resp.json(); //converting data to json\r\n    })\r\n    .then(function (data) {\r\n      if (!unitsCheck.checked) {\r\n        temp = (data.main.temp - 273.15).toFixed(2);\r\n        // tempUnits.textContent = '°C';\r\n      } else if (unitsCheck.checked) {\r\n        temp = (((data.main.temp - 273.15) * 9) / 5 + 32).toFixed(2);\r\n        // tempUnits.textContent = '°F';\r\n      }\r\n\r\n      tempPara.textContent = temp;\r\n      city.textContent = data.name;\r\n      humidityPara.textContent = `${data.main.humidity}%`;\r\n      windPara.textContent = `${data.wind.speed} m/s`;\r\n      weatherDescPara.textContent = data.weather[0].description;\r\n    })\r\n    .catch(function (error) {\r\n      console.log('Caught an error: ', error);\r\n    });\r\n}\r\n\r\nfunction getLocalWeather() {\r\n  const status = document.querySelector('#status');\r\n\r\n  function success(position) {\r\n    const latitude = position.coords.latitude;\r\n    const longitude = position.coords.longitude;\r\n    getWeatherBylatlon(latitude, longitude);\r\n  }\r\n\r\n  function error() {\r\n    status.textContent = 'Unable to retrieve your location';\r\n  }\r\n\r\n  if (!navigator.geolocation) {\r\n    status.textContent = 'Geolocation is not supported by your browser';\r\n  } else {\r\n    navigator.geolocation.getCurrentPosition(success, error);\r\n  }\r\n}\r\n\r\nfunction kelvins2Ferenheits(tempInKelvins) {\r\n  return (tempInKelvins - 273.15).toFixed(2);\r\n}\r\n\r\nfunction kelvins2Celsius(tempInKelvins) {\r\n  return (((tempInKelvins - 273.15) * 9) / 5 + 32).toFixed(2);\r\n}\r\n\r\nfunction ferenheit2Celsius(tempInFerenheit) {\r\n  return (((tempInFerenheit - 32) * 5) / 9).toFixed(2);\r\n}\r\n\r\nfunction celsius2Ferenheit(tempInCelsius) {\r\n  return ((tempInCelsius * 9) / 5 + 32).toFixed(2);\r\n}\r\n\r\n// Main Code:\r\ndocument\r\n  .querySelector('#find-loc-weather')\r\n  .addEventListener('click', getLocalWeather);\r\nunitsCheck.addEventListener('change', () => {\r\n  if (!unitsCheck.checked) {\r\n    tempPara.textContent = temp = ferenheit2Celsius(temp);\r\n  } else if (unitsCheck.checked) {\r\n    tempPara.textContent = temp = celsius2Ferenheit(temp);\r\n  }\r\n});\r\n\r\ninput.addEventListener('keypress', (event) => {\r\n  if (event.key === 'Enter') {\r\n    event.preventDefault();\r\n    getWeatherByCity(input.value);\r\n    input.value = '';\r\n  }\r\n  console.log(event);\r\n});\r\n\r\ngetWeatherByCity('London');\r\n"]}